// <auto-generated />
using System;
using EntrenamientoService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntrenamientoService.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250118155238_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntrenamientoService.Domain.Entities.Ejercicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EjercicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntrenamientoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ObjetivoRepeticiones")
                        .HasColumnType("int");

                    b.Property<double>("TiempoDescanso")
                        .HasColumnType("float");

                    b.Property<int>("UnidadTiempo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntrenamientoId");

                    b.ToTable("Ejercicios");
                });

            modelBuilder.Entity("EntrenamientoService.Domain.Entities.Entrenamiento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Entrenamientos");
                });

            modelBuilder.Entity("EntrenamientoService.Domain.Entities.Serie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EjercicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<int>("Repeticiones")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EjercicioId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("EntrenamientoService.Domain.Entities.Ejercicio", b =>
                {
                    b.HasOne("EntrenamientoService.Domain.Entities.Entrenamiento", "Entrenamiento")
                        .WithMany("Ejercicios")
                        .HasForeignKey("EntrenamientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entrenamiento");
                });

            modelBuilder.Entity("EntrenamientoService.Domain.Entities.Serie", b =>
                {
                    b.HasOne("EntrenamientoService.Domain.Entities.Ejercicio", "Ejercicio")
                        .WithMany("Series")
                        .HasForeignKey("EjercicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ejercicio");
                });

            modelBuilder.Entity("EntrenamientoService.Domain.Entities.Ejercicio", b =>
                {
                    b.Navigation("Series");
                });

            modelBuilder.Entity("EntrenamientoService.Domain.Entities.Entrenamiento", b =>
                {
                    b.Navigation("Ejercicios");
                });
#pragma warning restore 612, 618
        }
    }
}
